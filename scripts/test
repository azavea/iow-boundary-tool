#!/bin/bash

set -e

if [[ -n "${IOW_BOUNDARY_TOOL_DEBUG}" ]]; then
    set -x
fi

function usage() {
    echo -n \
        "Usage: $(basename "$0")
Run tests.
"
}

function lint() {
    ./scripts/lint
}

function lint_ci() {
    if [[ -n "${GIT_COMMIT}" ]]; then
        GIT_COMMIT="${GIT_COMMIT}" \
            ./scripts/lint
    else
        echo "ERROR: No GIT_COMMIT variable defined."
        exit 1
    fi
}

function test_django() {
    ./scripts/manage test --noinput
}

function test_django_ci() {
    if [[ -n "${GIT_COMMIT}" ]]; then
        GIT_COMMIT="${GIT_COMMIT}" docker-compose \
            -f docker-compose.yml \
            -f docker-compose.ci.yml \
            run --rm --entrypoint python django \
            manage.py test --noinput
    else
        echo "ERROR: No GIT_COMMIT variable defined."
        exit 1
    fi
}

function test_app() {
    docker-compose \
        run --rm --no-deps app \
        bun test --watchAll=false
}

function test_app_watch() {
    docker-compose \
        run --rm --no-deps app \
        bun test
}

function test_app_ci() {
    docker-compose \
        run --rm --no-deps -e CI app \
        bun test --watchAll=false
}

if [[ ${BASH_SOURCE[0]} == "${0}" ]]; then
    if [[ "${1:-}" == "--help" ]]; then
        usage
    elif [[ "${1:-}" == "--lint" ]]; then
        lint
    elif [[ "${1:-}" == "--app" ]]; then
        test_app_watch
    elif [[ "${1:-}" == "--django" ]]; then
        test_django
    elif [[ -n "${CI}" ]]; then
        lint_ci
        # TODO this was erroring I think because the frontend is not fully configured
        # test_app_ci
        test_django_ci
    else
        lint
        # TODO this was erroring I think because the frontend is not fully configured
        # test_app
        test_django
    fi
fi
