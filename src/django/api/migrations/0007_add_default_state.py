# Generated by Django 3.2.13 on 2022-09-29 22:41

import os
import json
from django.conf import settings
from django.db import migrations
from django.contrib.gis.geos import GEOSGeometry, MultiPolygon

def add_default_state_nc(apps, schema_editor):
    # Utility relies on a many-to-one relationship with State
    # We should populate db with a State so we have ability to
    # add upcoming state field on Utility with default FK id
    State = apps.get_model('api', 'State')
    with open(os.path.join(settings.BASE_DIR, 'data/NC_BOUNDARY.geojson'), 'r') as f:
        NC_GEOJSON = json.load(f)
    NC_POLYGON = GEOSGeometry(str(NC_GEOJSON['features'][0]['geometry']))
    # Turn Polygon into type MultiPolygon to match shape field
    NC_MULTIPOLYGON = MultiPolygon([NC_POLYGON])
    NC_STATE = State(id="NC", name="North Carolina", shape=NC_MULTIPOLYGON)
    NC_STATE.save()

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0006_create_state'),
    ]

    operations = [
        migrations.RunPython(add_default_state_nc, migrations.RunPython.noop),
    ]
